/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Userinterface.dior.WarehouseRole;

import Business.EcoSystem;
import Business.Enterprise.BeautyEnterprise;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Product.Product;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ProductUpdateRequest;
import Business.Organization.DiorAdminOrganization;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author too
 */
public class ReplenishStockJPanel extends javax.swing.JPanel {

    /**
     * Creates new form replenishstockJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private Organization organization;
    private EcoSystem business;
    private Enterprise enterprise;
    private BeautyEnterprise beauty;
    public ReplenishStockJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.business = business;
        this.enterprise = enterprise;
        this.beauty = (BeautyEnterprise)enterprise;
        
        nameTxt.setEditable(false);
        productIdTxt.setEditable(false);
        purchasePTxt.setEditable(false);
        salePTxt.setEditable(false);
        quantityTxt.setEditable(false);
        messageTxt.setEditable(false);
        
        populateproductTable();
        populateproductUpdateTable();
    }

    public void populateproductTable(){

        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
        model.setRowCount(0);
        for(Product product : beauty.getProductDir().getProductList()){
            Object[] row = new Object[6];
            row[0] = product;
            row[1] = product.getProductId();
            row[2] = product.getAvailNum();
            row[3] = product.getSalesPrice();
            row[4] = product.getPurchasingPrice();
            model.addRow(row);
        }   
    }
    
    public void populateproductUpdateTable(){
        DefaultTableModel model = (DefaultTableModel) productUpdateTable.getModel();
        model.setRowCount(0);
        for(WorkRequest request : account.getWorkQueue().getWorkRequestList()){
          //  System.out.println(request.getProduct().getProductName());
            Object[] row = new Object[7];
            row[0] = ((ProductUpdateRequest)request).getName();
            row[1] = ((ProductUpdateRequest)request).getProductid();
            row[2] = ((ProductUpdateRequest)request).getAvailnum();
            row[3] = ((ProductUpdateRequest)request).getStatus();
            row[4] = ((ProductUpdateRequest)request).getSaleprice();
            row[5] = ((ProductUpdateRequest)request).getPurchasingprice();
            row[6] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            
            model.addRow(row);

        }   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        autoSelecteBtn = new javax.swing.JButton();
        requestUpdateBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        purchasePTxt = new javax.swing.JTextField();
        salePTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        productIdTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        quantityTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        messageTxt = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        productUpdateTable = new javax.swing.JTable();

        jLabel1.setText("Replenish Stock");

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        autoSelecteBtn.setText("Product Needed Replenshment");
        autoSelecteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoSelecteBtnActionPerformed(evt);
            }
        });

        requestUpdateBtn.setText("Request Update");
        requestUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestUpdateBtnActionPerformed(evt);
            }
        });

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "ProductId", "AvailNum", "Sale Price", "Purchasing Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(productTable);
        if (productTable.getColumnModel().getColumnCount() > 0) {
            productTable.getColumnModel().getColumn(0).setResizable(false);
            productTable.getColumnModel().getColumn(0).setPreferredWidth(2);
            productTable.getColumnModel().getColumn(1).setResizable(false);
            productTable.getColumnModel().getColumn(1).setPreferredWidth(3);
            productTable.getColumnModel().getColumn(2).setResizable(false);
            productTable.getColumnModel().getColumn(2).setPreferredWidth(4);
            productTable.getColumnModel().getColumn(3).setResizable(false);
            productTable.getColumnModel().getColumn(3).setPreferredWidth(5);
            productTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel2.setText("Name:");

        jLabel5.setText("Purchasing Price:");

        purchasePTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchasePTxtActionPerformed(evt);
            }
        });

        jLabel4.setText("Sale Price:");

        jLabel6.setText("ProductId");

        jLabel7.setText("Quantity");

        quantityTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityTxtActionPerformed(evt);
            }
        });

        jLabel8.setText("Message:");

        updateBtn.setText("Choose Product");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        productUpdateTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "ProductId", "Quantity", "Status", "Sale Price", "Purchasing Price", "Receiver"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(productUpdateTable);
        if (productUpdateTable.getColumnModel().getColumnCount() > 0) {
            productUpdateTable.getColumnModel().getColumn(0).setResizable(false);
            productUpdateTable.getColumnModel().getColumn(0).setPreferredWidth(2);
            productUpdateTable.getColumnModel().getColumn(1).setResizable(false);
            productUpdateTable.getColumnModel().getColumn(1).setPreferredWidth(3);
            productUpdateTable.getColumnModel().getColumn(2).setResizable(false);
            productUpdateTable.getColumnModel().getColumn(2).setPreferredWidth(4);
            productUpdateTable.getColumnModel().getColumn(3).setResizable(false);
            productUpdateTable.getColumnModel().getColumn(3).setPreferredWidth(3);
            productUpdateTable.getColumnModel().getColumn(4).setResizable(false);
            productUpdateTable.getColumnModel().getColumn(4).setPreferredWidth(5);
            productUpdateTable.getColumnModel().getColumn(5).setResizable(false);
            productUpdateTable.getColumnModel().getColumn(6).setResizable(false);
            productUpdateTable.getColumnModel().getColumn(6).setPreferredWidth(4);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBack)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addComponent(autoSelecteBtn))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(99, 99, 99)
                                        .addComponent(updateBtn))))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(11, 11, 11)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(58, 58, 58)
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel6))
                                                .addComponent(jLabel4)
                                                .addComponent(jLabel8))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addGap(13, 13, 13)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(purchasePTxt)
                                        .addComponent(salePTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(productIdTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(quantityTxt)
                                        .addComponent(messageTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(47, 47, 47)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(257, 257, 257)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(55, 55, 55)
                            .addComponent(requestUpdateBtn)
                            .addGap(211, 211, 211)
                            .addComponent(jButton1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(autoSelecteBtn)
                                        .addGap(18, 18, 18)
                                        .addComponent(updateBtn)))
                                .addGap(82, 82, 82)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(productIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(quantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(purchasePTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(salePTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(messageTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(requestUpdateBtn)
                        .addGap(55, 55, 55))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jButton1)
                        .addGap(47, 47, 47)))
                .addComponent(btnBack)
                .addGap(54, 54, 54))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void quantityTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityTxtActionPerformed

    private void purchasePTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchasePTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_purchasePTxtActionPerformed

    private void autoSelecteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoSelecteBtnActionPerformed
        // TODO add your handling code here
        populateNeedReplenishProductTable();
    }

    public void populateNeedReplenishProductTable(){
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
        model.setRowCount(0);
        for(Product product : beauty.getProductDir().getProductList()){
            if(product.getAvailNum()<10){
            Object[] row = new Object[6];
            row[0] = product;
            row[1] = product.getProductId();
            row[2] = product.getAvailNum();
            row[3] = product.getSalesPrice();
            row[4] = product.getPurchasingPrice();
            model.addRow(row);
            }
                else{
                return;
                }
        }   
    }//GEN-LAST:event_autoSelecteBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        int selectedrow = productTable.getSelectedRow();
        if(selectedrow<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        purchasePTxt.setEditable(true);
        salePTxt.setEditable(true);
        quantityTxt.setEditable(true);
        messageTxt.setEditable(true);
        
        Product product = (Product)productTable.getValueAt(selectedrow, 0);
        nameTxt.setText(product.getProductName());
        productIdTxt.setText(Integer.toString(product.getProductId()));
        purchasePTxt.setText(Double.toString(product.getPurchasingPrice()));
        salePTxt.setText(Double.toString(product.getSalesPrice()));
    }//GEN-LAST:event_updateBtnActionPerformed

    private void requestUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestUpdateBtnActionPerformed
        // TODO add your handling code here:
        
        if(nameTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Name cannotbe empty");
            return;
        }else if(productIdTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "ProductId cannotbe empty");
            return;
        }else if(quantityTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "AvaliNumcannotbe empty");
            return;
        }else if(purchasePTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "PurchasingPrice cannotbe empty");
            return;
        }
        else if(salePTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Sale Price cannotbe empty");
            return;
        }
        else if(messageTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please Write a Message ");
            return;
        }
        
    ProductUpdateRequest productUpdateRequest = new ProductUpdateRequest();
    productUpdateRequest.setName(nameTxt.getText());
    productUpdateRequest.setAvailnum(Integer.parseInt(quantityTxt.getText()));
    productUpdateRequest.setProductid(Integer.parseInt(productIdTxt.getText()));
    productUpdateRequest.setPurchasingprice(Double.parseDouble(purchasePTxt.getText()));
    productUpdateRequest.setSaleprice(Double.parseDouble(salePTxt.getText()));
    productUpdateRequest.setMessage(messageTxt.getText());
    productUpdateRequest.setStatus("Pending");
    productUpdateRequest.setSender(account);
    
       Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof DiorAdminOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(productUpdateRequest);
            account.getWorkQueue().getWorkRequestList().add(productUpdateRequest);
        }
        
    populateproductUpdateTable();
    
    nameTxt.setText("");
    productIdTxt.setText("");
    purchasePTxt.setText("");
    salePTxt.setText("");
    quantityTxt.setText("");
    messageTxt.setText("");
    }//GEN-LAST:event_requestUpdateBtnActionPerformed

    
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        populateproductUpdateTable();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton autoSelecteBtn;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField messageTxt;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JTextField productIdTxt;
    private javax.swing.JTable productTable;
    private javax.swing.JTable productUpdateTable;
    private javax.swing.JTextField purchasePTxt;
    private javax.swing.JTextField quantityTxt;
    private javax.swing.JButton requestUpdateBtn;
    private javax.swing.JTextField salePTxt;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
